name: data-reify
version: 0.6
id: data-reify-0.6-d22877e7dad5a4b0bcffa21d6e44fcf1
license: BSD3
copyright: (c) 2009 Andy Gill
maintainer: Andy Gill <andygill@ku.edu>
stability: alpha
homepage: http://www.ittc.ku.edu/csdl/fpg/Tools/IOReification
package-url:
synopsis: Reify a recursive data structure into an explicit graph.
description: 'data-reify' provided the ability to turn recursive structures into explicit graphs.
             Many (implicitly or explicitly) recursive data structure can be given this ability, via
             a type class instance. This gives an alternative to using 'Ref' for observable sharing.
             .
             Observable sharing in general is unsafe, so we use the IO monad to bound this effect,
             but can be used safely even with 'unsafePerformIO' if some simple conditions are met.
             Typically this package will be used to tie the knot with DSL's that depend of
             observable sharing, like Lava.
             .
             Providing an instance for 'MuRef' is the mechanism for allowing a structure to be
             reified into a graph, and several examples of this are provided.
             .
             History:
             Version 0.1 used unsafe pointer compares.
             Version 0.2 of 'data-reify' used 'StableName's, and was much faster.
             Version 0.3 provided two versions of 'MuRef', the mono-typed version,
             for trees of a single type,
             and the dynamic-typed version, for trees of different types.
             Version 0.4 used 'Int' as a synonym for 'Unique' rather than 'Data.Unique'
             for node ids, by popular demand.
             Version 0.5 merged the mono-typed and dynamic version again, by using
             'DynStableName', an unphantomized version of StableName.
             .
             &#169; 2009 Andy Gill; BSD3 license.
category: Language, Data, Parsing, Reflection
author: Andy Gill
exposed: True
exposed-modules: Data.Reify Data.Reify.Graph
hidden-modules:
trusted: False
import-dirs: /home/kcarter/scrap/haskell/sunroof-test/lib/sunroof-compiler-0.2/.cabal-sandbox/lib/x86_64-linux-ghc-7.8.2/data-reify-0.6
library-dirs: /home/kcarter/scrap/haskell/sunroof-test/lib/sunroof-compiler-0.2/.cabal-sandbox/lib/x86_64-linux-ghc-7.8.2/data-reify-0.6
hs-libraries: HSdata-reify-0.6
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.7.0.0-018311399e3b6350d5be3a16b144df9b
         containers-0.5.5.1-19036437a266c66c860794334111ee93
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/kcarter/scrap/haskell/sunroof-test/lib/sunroof-compiler-0.2/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.8.2/data-reify-0.6/html/data-reify.haddock
haddock-html: /home/kcarter/scrap/haskell/sunroof-test/lib/sunroof-compiler-0.2/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.8.2/data-reify-0.6/html
